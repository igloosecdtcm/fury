fury_config <- yaml.load_file("./config/config.yaml")
fury_config <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
fury_config <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
library("yaml", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
fury_config <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
fury_config
View(fury_config)
fury_config <- yaml.load_file("./config/config.yaml")
jobs <- yaml.load_file(fury_config$realtimeJobPath)
fury_config <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
jobs <- yaml.load_file(fury_config$realtimeJobPath)
a <- 1525240080000
a
a <- 1525240080
a
a <- '{\"bool\" : { \"must\" : [{\"range\" : { \"event_time\" : { \"gte\" : 1525240860, \"lte\" : 1525240920}}},{\"match\" : { \"category\" : \"E002\"}},{\"regexp\" : { \"s_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}},{\"regexp\" : { \"d_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}}]}}'
a
query(a)
library("elasticsearchr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("elastic", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("elasticsearchr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
query(a)
print(query(a))
q <- '{\"bool\" : { \"must\" : [{\"range\" : { \"event_time\" : { \"gte\" : 1525241220000, \"lte\" : 1525241280000}}},{\"match\" : { \"category\" : \"E002\"}},{\"regexp\" : { \"s_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}},{\"regexp\" : { \"d_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}}]}}'
a <- '{\"s_info.keyword_aggs\" : {\"terms\" : {\"field\" : \"s_info.keyword\"}}}'
print(query(q) + aggs(a))
query({\"bool\" : { \"must\" : [{\"range\" : { \"event_time\" : { \"gte\" : 1525241520000, \"lte\" : 1525241580000}}},{\"match\" : { \"category\" : \"E007\"}},{\"regexp\" : { \"d_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}}]}})
a <- query('{\"bool\" : { \"must\" : [{\"range\" : { \"event_time\" : { \"gte\" : 1525241520000, \"lte\" : 1525241580000}}},{\"match\" : { \"category\" : \"E007\"}},{\"regexp\" : { \"d_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}}]}}')
a
print(a)
rm(list=ls())
q
q <- query('{\"bool\" : { \"must\" : [{\"range\" : { \"event_time\" : { \"gte\" : 1525242840000, \"lte\" : 1525242900000}}},{\"match\" : { \"category\" : \"E002\"}},{\"regexp\" : { \"s_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}},{\"regexp\" : { \"d_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}}]}}')
a <- aggs('{ \"s_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}},{\"regexp\" : { \"d_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}}]}}')
a <- aggs('{ \"s_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}},{\"regexp\" : { \"d_info\" : \"<0-255>.<0-255>.<0-255>.<0-255>\"}}]}}')
a <- aggs('{\"s_info.keyword_aggs\" : {\"terms\" : {\"field\" : \"s_info.keyword\"}}}')
q_a <- q + a
q_a
print(q_a)
Sys.sleep(1)
Sys.sleep(2)
s
s <- 10
s
typeof(s)
typeof(a)
typeof(q)
typeof(q)
q
fury_copnfig <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
source("/home/k/ws2/fury/R/init.r")
source("/home/k/ws2/fury/R/initFunction.r")
fury_copnfig <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
fury_config$
fury_config <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
fury_config <- yaml.load_file("/home/k/ws2/fury/config/config.yaml")
jobs <- yaml.load_file("/home/k/ws2/fury/R/batch_test_jobs.yaml")
jobs
jobs
jobs <- yaml.load_file("/home/k/ws2/fury/R/batch_test_jobs.yaml")
warnings(yaml.load_file("/home/k/ws2/fury/R/batch_test_jobs.yaml"))
warnings(warnings(yaml.load_file("/home/k/ws2/fury/R/batch_test_jobs.yaml")))
jobs <- yaml.load_file("/home/k/ws2/fury/R/batch_test_jobs.yaml")
jobs[[1]]$batchCount
connect(es_host = fury_config$valkyrieIp, es_port = fury_config$valkyriePort)
success_count <- 0
empty_count <- 0
for (idx in 1:length(jobs)){
new_query <- old_query_parser(paste0("event_time range ", jobs[[idx]]$startDate, "_", jobs[[idx]]$endDate, " & ", jobs[[idx]]$match))
new_aggs <- old_aggs_parser(jobs[[idx]]$groupBy)
field_set <- get_field_set(new_aggs)
query_aggs <- query(new_query) + aggs(new_aggs)
tryCatch({
result <- elastic(paste0("http://",fury_config$valkyrieIp,":",fury_config$valkyriePort), fury_config$valkyrieIndex, fury_config$valkyrieIndexType) %search% query_aggs
success_count <- success_count + aggregation_insert(jobs[[idx]]$id, jobs[[idx]]$endDate, field_set, result)
print(paste0(jobs[[idx]]$title, " - success"))
},
error = function(e) {
print(paste0(jobs[[idx]]$title, " - empty_insert [", e, "]"))
empty_count <- empty_count + aggregation_empty_insert(jobs[[idx]]$id, jobs[[idx]]$endDate, field_set)
print(empty_count)
},
warning = function(w) print(paste0("w - ", w)),
finally = NULL)
Sys.sleep(fury_config$batchIndexingSleep)
}
print(paste0("success_count - ", success_count))
print(paste0("empty_count - ", empty_count))
